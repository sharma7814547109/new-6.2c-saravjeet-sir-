pipeline {
    agent any
    
    environment {
        EMAIL_RECIPIENT = 'alphatushar1912@gmail.com'
        USER_EMAIL = 'alphatushar1912@gmail.com'
    }

    stages {
        stage('Build') {
            steps {
                echo 'Building the application...'
            }
            post {
                always {
                    sendEmail('Build Stage Completed', 'The build stage has completed. Check Jenkins logs for details.')
                }
            }
        }

        stage('Unit and Integration Tests') {
            steps {
                echo 'Running unit and integration tests...'
            }
            post {
                always {
                    sendEmail('Unit and Integration Tests Completed', 'The unit and integration tests have completed. Check Jenkins logs for details.')
                }
            }
        }

        stage('Code Analysis') {
            steps {
                echo 'Performing static code analysis...'
            }
            post {
                always {
                    sendEmail('Code Analysis Completed', 'The code analysis stage has completed. Check Jenkins logs for details.')
                }
            }
        }

        stage('Security Scan') {
            steps {
                echo 'Performing security scan...'
            }
            post {
                always {
                    sendEmail('Security Scan Completed', 'The security scan has completed. Check the Jenkins logs for details.')
                }
            }
        }

        stage('Deploy to Staging') {
            steps {
                echo 'Deploying to staging environment...'
            }
            post {
                always {
                    sendEmail('Deployment to Staging Completed', 'Deployment to the staging environment has completed. Check Jenkins logs for details.')
                }
            }
        }

        stage('Integration Tests on Staging') {
            steps {
                echo 'Running integration tests on staging...'
            }
            post {
                always {
                    sendEmail('Integration Tests on Staging Completed', 'Integration tests on staging have completed. Check Jenkins logs for details.')
                }
            }
        }

        stage('Deploy to Production') {
            steps {
                echo 'Deploying to production...'
            }
            post {
                always {
                    sendEmail('Deployment to Production Completed', 'Deployment to production has completed. Check Jenkins logs for details.')
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline executed successfully!'
            sendEmail('Pipeline Execution Successful', 'The entire pipeline has completed successfully.')
        }
        failure {
            echo 'Pipeline failed! Check the logs for more details.'
            sendEmail('Pipeline Execution Failed', 'The pipeline has failed. Please check the Jenkins logs for more details.')
        }
    }
}

def sendEmail(String subject, String body) {
    emailext(
        subject: subject,
        body: body,
        recipientProviders: [[$class: 'DevelopersRecipientProvider']],
        to: "${USER_EMAIL}",
        replyTo: 'no-reply@jenkins.com'
    )
}
